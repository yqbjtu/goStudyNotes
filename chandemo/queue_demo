var (
	ErrQueueEmpty = errors.New("queue empty")
   	ErrQueueFull  = errors.New("queue full")
)

type BQueue struct {
	channel chan int
}

func NewQueue(capacity int) Queue {
	return &BQueue{
		channel: make(chan int, capacity),
	}
}

func (q *BQueue) Enqueue(val int) error {
	select {
	case q.channel <- val:
		return nil
	default:
		return ErrQueueFull
	}
}

func (q *BQueue) Dequeue() (int, error) {
	select {
	case val := <- q.channel:
		return val, nil
	default:
		return 0, ErrQueueEmpty
	}
}
